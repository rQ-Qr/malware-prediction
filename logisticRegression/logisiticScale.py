import dask.dataframe as dd
from dask_ml.linear_model import LogisticRegression
from dask_ml.model_selection import train_test_split
from dask_ml.metrics import accuracy_score
from datetime import datetime

def main():
    print("Loading data...")
    data = dd.read_csv('data.csv', sample=1000000,  dtype={'AppVersion': 'float64',
                          'AvSigVersion': 'float64',
                          'Census_OSVersion': 'float64',
                          'Census_TotalPhysicalRAM': 'float64',
                          'EngineVersion': 'float64',
                          'HasDetections': 'float64'})

    variances = data.var().compute()


    constant_columns = variances.index[variances == 0].tolist()
    print("Constant columns:", constant_columns)

    data = data.drop(columns=constant_columns)

    
    X = data[data.columns[:-1]]
    y = data[data.columns[-1]]



    current_time = datetime.now()
    random_state = int(current_time.strftime("%H%M%S%f")) % 900000
    print("Splitting data...")
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=random_state, shuffle=True)


    print("Converting data to dask arrays...")
    X_train = X_train.to_dask_array(lengths=True)
    X_test = X_test.to_dask_array(lengths=True)
    y_train = y_train.to_dask_array(lengths=True)
    y_test = y_test.to_dask_array(lengths=True)

    print("Fitting model...")
    model = LogisticRegression()


    model.fit(X_train, y_train)
    print(f"Making Prediction: ")
    y_pred = model.predict(X_test)

    accuracy = accuracy_score(y_test, y_pred)
    print(f"Model Accuracy: {accuracy}")

main()
